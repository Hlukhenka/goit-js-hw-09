{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,OAAQJ,SAASC,cAAc,wBA2BjC,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUP,UAEpBU,EAAO,CAAEH,WAAUP,S,GAEpBA,E,IAjCPD,EAAKM,OAAOU,iBAAiB,SAE7B,SAAuBC,GACrBA,EAAEC,iBAEF,IAAIC,EAAQnB,EAAKC,MAAMmB,MACjBhB,EAAOJ,EAAKI,KAAKgB,MACjBf,EAASL,EAAKK,OAAOe,MAC3BpB,EAAKC,MAAMmB,MAAQpB,EAAKI,KAAKgB,MAAQpB,EAAKK,OAAOe,MAAQ,GACzDD,GAASA,EAET,IAAK,IAAIE,EAAI,EAAGA,EAAIhB,EAAQgB,GAAK,EAAG,CAElCd,EADec,EAAI,EACKF,GACrBG,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUP,EAAKsB,EAALtB,MACjBuB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAoCC,OAAfnB,EAAS,QAAYmB,OAAN1B,EAAM,M,IAEnE2B,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUP,EAAKsB,EAALtB,MAClBuB,EAAA1B,GAAS2B,OAAOI,QAAQ,oBAAmCF,OAAfnB,EAAS,QAAYmB,OAAN1B,EAAM,M,IAErEkB,GAASf,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submit: document.querySelector('button[type=submit]'),\n};\n\nrefs.submit.addEventListener('click', onClickSubmit);\n\nfunction onClickSubmit(e) {\n  e.preventDefault();\n\n  let delay = refs.delay.value;\n  const step = refs.step.value;\n  const amount = refs.amount.value;\n  refs.delay.value = refs.step.value = refs.amount.value = '';\n  delay = +delay;\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay = +step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","submit","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.4b780aa3.js.map"}